# Generated by Django 3.2 on 2023-08-25 09:37

import applications.accounts.utils
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email адрес')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Номер телефона')),
                ('whatsapp_phone', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Номер Whatsapp')),
                ('is_employer', models.BooleanField(default=False, verbose_name='Работадатель')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('is_student', models.BooleanField(default=False, verbose_name='Студент')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперпользователь')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Удален')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_sum', models.IntegerField(verbose_name='Сумма оплаты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания счета')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения счета')),
            ],
            options={
                'verbose_name': 'Счет',
                'verbose_name_plural': 'Счета',
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='Город')),
                ('invited_status', models.CharField(choices=[('not_invited', 'Не оповестили'), ('doubtful', 'Сомнительно'), ('invited', 'Оповестили'), ('invited_twice', 'Оповестили дважды')], default='not_invited', max_length=50, verbose_name='Приглашен')),
                ('invite_date', models.DateField(blank=True, null=True, verbose_name='Дата оповещения')),
                ('student_confirm', models.BooleanField(default=False, verbose_name='Подтверждение студента')),
                ('vacancy_confirm', models.BooleanField(default=False, verbose_name='Прошел на вакансию')),
                ('appointment_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время собеседования')),
                ('work_from', models.DateField(blank=True, null=True, verbose_name='Дата начала работы')),
                ('work_to', models.DateField(blank=True, null=True, verbose_name='Дата окончания работы')),
            ],
            options={
                'verbose_name': 'Собеседование',
                'verbose_name_plural': 'Собеседования',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фотография')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Подтвержден пользователем')),
                ('is_form_completed', models.BooleanField(default=False, verbose_name='Статус заполнения формы')),
                ('is_admin_confirmed', models.BooleanField(default=False, verbose_name='Подтверждено админом')),
                ('access_to_registration_documents', models.BooleanField(default=False, verbose_name='Доступ к справкам для регистрации')),
                ('access_to_embassy_documents', models.BooleanField(default=False, verbose_name='Доступ к справкам для посольства')),
                ('start_vise_date', models.DateField(blank=True, default=None, null=True, verbose_name='Дата начала действия визы')),
                ('end_vise_date', models.DateField(blank=True, default=None, null=True, verbose_name='Дата окончания действия визы')),
                ('level', models.CharField(blank=True, choices=[('a0', 'A0'), ('a1-', 'A1-'), ('a1', 'A1'), ('a1+', 'A1+'), ('a2-', 'A2-'), ('a2', 'A2'), ('a2+', 'A2+'), ('b1-', 'B1-'), ('b1', 'B1'), ('b1+', 'B1+'), ('b2-', 'B2-'), ('b2', 'B2'), ('b2+', 'B2+'), ('c1', 'C1')], default='', max_length=3, verbose_name='Уровень')),
                ('courses_info', models.TextField(blank=True, default='', verbose_name='Курсы')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('note', models.CharField(blank=True, default='', max_length=255, verbose_name='Заметка')),
                ('first_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Имя на латинице')),
                ('first_name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='Имя на кириллице')),
                ('last_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Фамилия на латинице')),
                ('last_name_ru', models.CharField(blank=True, default='', max_length=255, verbose_name='Фамилия на кирилице')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужской'), ('F', 'Женский')], default='', max_length=1, verbose_name='Пол')),
                ('bday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('nationality', models.CharField(blank=True, choices=[('Kirgisistan', 'Кыргызстан'), ('Kazakhistan', 'Казахстан'), ('Uzbekistan', 'Узбекистан'), ('Tadzhikistan', 'Таджикистан'), ('Russland', 'Россия'), ('andere', 'другое')], default='', max_length=50, verbose_name='Гражданство')),
                ('been_to_germany', models.BooleanField(blank=True, null=True, verbose_name='Был в Германии')),
                ('birth_country', models.CharField(blank=True, choices=[('Kirgisistan', 'Кыргызстан'), ('Kazakhistan', 'Казахстан'), ('Uzbekistan', 'Узбекистан'), ('Tadzhikistan', 'Таджикистан'), ('Russland', 'Россия'), ('Türkei', 'Турция')], default='', max_length=50, verbose_name='Страна рождения')),
                ('birth_region', models.CharField(blank=True, choices=[('Tschui', 'Чуйская область'), ('Naryn', 'Нарынская область'), ('Talas', 'Таласская область'), ('Issik-Kul', 'Ыссык-Кульская область'), ('Zhalal-Abad', 'Жалал-Абадская область'), ('Osh', 'Ошская область'), ('Batken', 'Баткенская область')], default='', max_length=50, verbose_name='Область рождения')),
                ('birth_city', models.CharField(blank=True, default='', max_length=255, verbose_name='Город/cело рождения')),
                ('reg_region', models.CharField(blank=True, choices=[('Чуйская область', 'Чуйская область'), ('Нарынская область', 'Нарынская область'), ('Таласская область', 'Таласская область'), ('Ыссык-Кульская область', 'Ыссык-Кульская область'), ('Жалал-Абадская область', 'Жалал-Абадская область'), ('Ошская область', 'Ошская область'), ('Баткенская область', 'Баткенская область')], default='', max_length=50, verbose_name='Область (адрес прописки)')),
                ('reg_city', models.CharField(blank=True, default='', max_length=255, verbose_name='Город/село на русском (адрес прописки)')),
                ('reg_city_en', models.CharField(blank=True, default='', max_length=255, verbose_name='Город/село на латинице (адрес прописки)')),
                ('reg_district', models.CharField(blank=True, default='', max_length=255, verbose_name='Район на русском (адрес прописки)')),
                ('reg_district_en', models.CharField(blank=True, default='', max_length=255, verbose_name='Район на латинице (адрес прописки)')),
                ('reg_street', models.CharField(blank=True, default='', max_length=500, verbose_name='Улица или микрорайон на русском (адрес прописки)')),
                ('reg_street_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Улица или микрорайон на латинице (адрес прописки)')),
                ('reg_house', models.CharField(blank=True, default='', max_length=255, verbose_name='Дом (адрес прописки)')),
                ('reg_apartment', models.CharField(blank=True, default='', max_length=255, verbose_name='Квартира (адрес прописки)')),
                ('live_region', models.CharField(blank=True, choices=[('Чуйская область', 'Чуйская область'), ('Нарынская область', 'Нарынская область'), ('Таласская область', 'Таласская область'), ('Ыссык-Кульская область', 'Ыссык-Кульская область'), ('Жалал-Абадская область', 'Жалал-Абадская область'), ('Ошская область', 'Ошская область'), ('Баткенская область', 'Баткенская область')], default='', max_length=50, verbose_name='Область (фактический адрес)')),
                ('live_city', models.CharField(blank=True, default='', max_length=255, verbose_name='Город/село на русском (фактический адрес)')),
                ('live_city_en', models.CharField(blank=True, default='', max_length=255, verbose_name='Город/село на латинице (фактический адрес)')),
                ('live_district', models.CharField(blank=True, default='', max_length=255, verbose_name='Район на русском (фактический адрес)')),
                ('live_district_en', models.CharField(blank=True, default='', max_length=255, verbose_name='Район на латинице (фактический адрес)')),
                ('live_street', models.CharField(blank=True, default='', max_length=500, verbose_name='Улица или микрорайон на русском (фактический адрес)')),
                ('live_street_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Улица или микрорайон на латинице (фактический адрес)')),
                ('live_house', models.CharField(blank=True, default='', max_length=255, verbose_name='Дом (фактический адрес)')),
                ('live_apartment', models.CharField(blank=True, default='', max_length=255, verbose_name='Квартира (фактический адрес)')),
                ('passport_number', models.CharField(blank=True, default='', max_length=100, verbose_name='Номер id паспорта')),
                ('zagranpassport_number', models.CharField(blank=True, default='', max_length=100, verbose_name='Номер загранпаспорта')),
                ('zagranpassport_end_time', models.DateField(blank=True, null=True, verbose_name='Дата окончания загранпаспорта')),
                ('degree', models.CharField(blank=True, choices=[('бакалавр', 'Бакалавр'), ('магистр', 'Магистр'), ('колледж', 'Колледж')], default='', max_length=20, verbose_name='Академическая степень')),
                ('year', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Курс')),
                ('study_start', models.DateField(blank=True, null=True, verbose_name='Дата поступления')),
                ('study_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('summer_holidays_start', models.DateField(blank=True, null=True, verbose_name='Дата начала каникул')),
                ('summer_holidays_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания каникул')),
                ('direction', models.CharField(blank=True, choices=[('nord', 'Nord'), ('sud', 'Süd')], max_length=50, null=True, verbose_name='Направление')),
                ('father_phone', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Контактный номер отца')),
                ('father_work_phone', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Рабочий номер отца')),
                ('father_company', models.CharField(blank=True, max_length=255, verbose_name='Место работы отца')),
                ('mother_phone', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Контактный номер матери')),
                ('mother_work_phone', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Рабочий номер матери')),
                ('mother_company', models.CharField(blank=True, max_length=255, verbose_name='Место работы матери')),
                ('company1', models.CharField(blank=True, default='', max_length=255, verbose_name='Компания (1 место работы)')),
                ('position1', models.CharField(blank=True, choices=[('Kellner', 'Официант'), ('Verkäufer', 'Продавец'), ('Kassierer', 'Кассир'), ('Küchenhelfer', 'Кух. работник'), ('Zimmermädchen', 'Горничная'), ('Rezeptionist', 'Ресепшн'), ('Lager', 'Грузчик'), ('Taxifahrer', 'Таксист'), ('Lehrer', 'Преподаватель'), ('Kinderfrau', 'Няня'), ('Bote', 'Курьер'), ('Sekretär', 'Секретарь'), ('Feldarbeiter', 'Работа на полях'), ('Call-Center-Betreiber', 'Оператор call-центра'), ('Wächter', 'Охранник'), ('Promoter', 'Промоутер'), ('Barmann', 'Бармен'), ('Reiseführer', 'Гид'), ('Animateur', 'Аниматор'), ('Tankwagen', 'Заправщик'), ('Verwalter', 'Администратор'), ('Packer', 'Упаковщик'), ('Nähwerkarbeiter', 'Работа в швейном цеху'), ('Putzfrau', 'Уборщица'), ('Hirt', 'Пастух'), ('Bauernarbeiter', 'Работа на фермах'), ('Sanitäter', 'Санитар'), ('Bauarbeiter', 'Строитель'), ('Visagist', 'Визажист'), ('Designer', 'Дизайнер'), ('Haushälterin', 'Домохозяйка'), ('Lagerverwalter', 'Кладовщик'), ('Absatzforscher', 'Маркетолог'), ('Masseur', 'Массажист'), ('Möbelbauer', 'Мебельщик'), ('Krankenpfleger', 'Медбрат'), ('Krankenschwester', 'Медсестра'), ('Manager', 'Мэнеджер'), ('Monteur', 'Монтёр'), ('Operator', 'Оператор'), ('Finisher', 'Отделочник'), ('Friseur', 'Парикмахер'), ('Übersetzer', 'Переводчик'), ('Koch', 'Повар'), ('Geschirrspüler', 'Посудомойщик'), ('Briefträger', 'Почтальон'), ('Wäscherin', 'Прачка'), ('Lagerarbeiter', 'Работа на складах'), ('Hilfsarbeiter', 'Разнорабочий'), ('Installateur', 'Сантехник'), ('Schweißer', 'Сварщик'), ('Krankenpflegerin', 'Сиделка'), ('Handelsvertreter', 'Торговый агент'), ('Trainer', 'Тренер'), ('Raumpfleger', 'Уборщик'), ('Fotograf', 'Фотограф'), ('Choreograph', 'Хореограф'), ('Elektriker', 'Электрик')], default='', max_length=50, verbose_name='Должность (1 место работы)')),
                ('start_date1', models.DateField(blank=True, null=True, verbose_name='Период работы от (1 место работы)')),
                ('end_date1', models.DateField(blank=True, null=True, verbose_name='Период работы до (1 место работы)')),
                ('country1', models.CharField(blank=True, choices=[('Kirgisistan', 'Кыргызстан'), ('Russland', 'Россия'), ('Türkei', 'Турция'), ('Kazakhistan', 'Казахстан'), ('Deutschland', 'Германия'), ('Uzbekistan', 'Узбекистан'), ('Tadzhikistan', 'Таджикистан'), ('Dubai', 'Дубай'), ('USA', 'Америка'), ('andere', 'другое')], default='', max_length=50, verbose_name='Страна (1 место работы)')),
                ('company2', models.CharField(blank=True, default='', max_length=255, verbose_name='Компания (2 место работы)')),
                ('position2', models.CharField(blank=True, choices=[('Kellner', 'Официант'), ('Verkäufer', 'Продавец'), ('Kassierer', 'Кассир'), ('Küchenhelfer', 'Кух. работник'), ('Zimmermädchen', 'Горничная'), ('Rezeptionist', 'Ресепшн'), ('Lager', 'Грузчик'), ('Taxifahrer', 'Таксист'), ('Lehrer', 'Преподаватель'), ('Kinderfrau', 'Няня'), ('Bote', 'Курьер'), ('Sekretär', 'Секретарь'), ('Feldarbeiter', 'Работа на полях'), ('Call-Center-Betreiber', 'Оператор call-центра'), ('Wächter', 'Охранник'), ('Promoter', 'Промоутер'), ('Barmann', 'Бармен'), ('Reiseführer', 'Гид'), ('Animateur', 'Аниматор'), ('Tankwagen', 'Заправщик'), ('Verwalter', 'Администратор'), ('Packer', 'Упаковщик'), ('Nähwerkarbeiter', 'Работа в швейном цеху'), ('Putzfrau', 'Уборщица'), ('Hirt', 'Пастух'), ('Bauernarbeiter', 'Работа на фермах'), ('Sanitäter', 'Санитар'), ('Bauarbeiter', 'Строитель'), ('Visagist', 'Визажист'), ('Designer', 'Дизайнер'), ('Haushälterin', 'Домохозяйка'), ('Lagerverwalter', 'Кладовщик'), ('Absatzforscher', 'Маркетолог'), ('Masseur', 'Массажист'), ('Möbelbauer', 'Мебельщик'), ('Krankenpfleger', 'Медбрат'), ('Krankenschwester', 'Медсестра'), ('Manager', 'Мэнеджер'), ('Monteur', 'Монтёр'), ('Operator', 'Оператор'), ('Finisher', 'Отделочник'), ('Friseur', 'Парикмахер'), ('Übersetzer', 'Переводчик'), ('Koch', 'Повар'), ('Geschirrspüler', 'Посудомойщик'), ('Briefträger', 'Почтальон'), ('Wäscherin', 'Прачка'), ('Lagerarbeiter', 'Работа на складах'), ('Hilfsarbeiter', 'Разнорабочий'), ('Installateur', 'Сантехник'), ('Schweißer', 'Сварщик'), ('Krankenpflegerin', 'Сиделка'), ('Handelsvertreter', 'Торговый агент'), ('Trainer', 'Тренер'), ('Raumpfleger', 'Уборщик'), ('Fotograf', 'Фотограф'), ('Choreograph', 'Хореограф'), ('Elektriker', 'Электрик')], default='', max_length=50, verbose_name='Должность (2 место работы)')),
                ('start_date2', models.DateField(blank=True, null=True, verbose_name='Период работы от (2 место работы)')),
                ('end_date2', models.DateField(blank=True, null=True, verbose_name='Период работы до (2 место работы)')),
                ('country2', models.CharField(blank=True, choices=[('Kirgisistan', 'Кыргызстан'), ('Russland', 'Россия'), ('Türkei', 'Турция'), ('Kazakhistan', 'Казахстан'), ('Deutschland', 'Германия'), ('Uzbekistan', 'Узбекистан'), ('Tadzhikistan', 'Таджикистан'), ('Dubai', 'Дубай'), ('USA', 'Америка'), ('andere', 'другое')], default='', max_length=50, verbose_name='Страна (2 место работы)')),
                ('company3', models.CharField(blank=True, default='', max_length=255, verbose_name='Компания (3 место работы)')),
                ('position3', models.CharField(blank=True, choices=[('Kellner', 'Официант'), ('Verkäufer', 'Продавец'), ('Kassierer', 'Кассир'), ('Küchenhelfer', 'Кух. работник'), ('Zimmermädchen', 'Горничная'), ('Rezeptionist', 'Ресепшн'), ('Lager', 'Грузчик'), ('Taxifahrer', 'Таксист'), ('Lehrer', 'Преподаватель'), ('Kinderfrau', 'Няня'), ('Bote', 'Курьер'), ('Sekretär', 'Секретарь'), ('Feldarbeiter', 'Работа на полях'), ('Call-Center-Betreiber', 'Оператор call-центра'), ('Wächter', 'Охранник'), ('Promoter', 'Промоутер'), ('Barmann', 'Бармен'), ('Reiseführer', 'Гид'), ('Animateur', 'Аниматор'), ('Tankwagen', 'Заправщик'), ('Verwalter', 'Администратор'), ('Packer', 'Упаковщик'), ('Nähwerkarbeiter', 'Работа в швейном цеху'), ('Putzfrau', 'Уборщица'), ('Hirt', 'Пастух'), ('Bauernarbeiter', 'Работа на фермах'), ('Sanitäter', 'Санитар'), ('Bauarbeiter', 'Строитель'), ('Visagist', 'Визажист'), ('Designer', 'Дизайнер'), ('Haushälterin', 'Домохозяйка'), ('Lagerverwalter', 'Кладовщик'), ('Absatzforscher', 'Маркетолог'), ('Masseur', 'Массажист'), ('Möbelbauer', 'Мебельщик'), ('Krankenpfleger', 'Медбрат'), ('Krankenschwester', 'Медсестра'), ('Manager', 'Мэнеджер'), ('Monteur', 'Монтёр'), ('Operator', 'Оператор'), ('Finisher', 'Отделочник'), ('Friseur', 'Парикмахер'), ('Übersetzer', 'Переводчик'), ('Koch', 'Повар'), ('Geschirrspüler', 'Посудомойщик'), ('Briefträger', 'Почтальон'), ('Wäscherin', 'Прачка'), ('Lagerarbeiter', 'Работа на складах'), ('Hilfsarbeiter', 'Разнорабочий'), ('Installateur', 'Сантехник'), ('Schweißer', 'Сварщик'), ('Krankenpflegerin', 'Сиделка'), ('Handelsvertreter', 'Торговый агент'), ('Trainer', 'Тренер'), ('Raumpfleger', 'Уборщик'), ('Fotograf', 'Фотограф'), ('Choreograph', 'Хореограф'), ('Elektriker', 'Электрик')], default='', max_length=50, verbose_name='Должность (3 место работы)')),
                ('start_date3', models.DateField(blank=True, null=True, verbose_name='Период работы от (3 место работы)')),
                ('end_date3', models.DateField(blank=True, null=True, verbose_name='Период работы до (3 место работы)')),
                ('country3', models.CharField(blank=True, choices=[('Kirgisistan', 'Кыргызстан'), ('Russland', 'Россия'), ('Türkei', 'Турция'), ('Kazakhistan', 'Казахстан'), ('Deutschland', 'Германия'), ('Uzbekistan', 'Узбекистан'), ('Tadzhikistan', 'Таджикистан'), ('Dubai', 'Дубай'), ('USA', 'Америка'), ('andere', 'другое')], default='', max_length=50, verbose_name='Страна (3 место работы)')),
                ('german', models.CharField(blank=True, choices=[('1', 'Понимаю и разговариваю без проблем'), ('2', 'Если что-то не понимаю, то переспрашиваю'), ('3', 'Понимаю многое, но плохо говорю'), ('4', 'Понимаю немного, когда говорят очень медленно, но плохо говорю'), ('5', 'Не разговариваю совсем')], default='', max_length=1, verbose_name='Знание немецкого языка')),
                ('english', models.CharField(blank=True, choices=[('1', 'Понимаю и разговариваю без проблем'), ('2', 'Если что-то не понимаю, то переспрашиваю'), ('3', 'Понимаю многое, но плохо говорю'), ('4', 'Понимаю немного, когда говорят очень медленно, но плохо говорю'), ('5', 'Не разговариваю совсем')], default='', max_length=1, verbose_name='Знание английского языка')),
                ('turkish', models.CharField(blank=True, choices=[('1', 'Понимаю и разговариваю без проблем'), ('2', 'Если что-то не понимаю, то переспрашиваю'), ('3', 'Понимаю многое, но плохо говорю'), ('4', 'Понимаю немного, когда говорят очень медленно, но плохо говорю'), ('5', 'Не разговариваю совсем')], default='', max_length=1, verbose_name='Знание турецкого языка')),
                ('russian', models.CharField(blank=True, choices=[('1', 'Понимаю и разговариваю без проблем'), ('2', 'Если что-то не понимаю, то переспрашиваю'), ('3', 'Понимаю многое, но плохо говорю'), ('4', 'Понимаю немного, когда говорят очень медленно, но плохо говорю'), ('5', 'Не разговариваю совсем')], default='', max_length=1, verbose_name='Знание русского языка')),
                ('chinese', models.CharField(blank=True, choices=[('1', 'Понимаю и разговариваю без проблем'), ('2', 'Если что-то не понимаю, то переспрашиваю'), ('3', 'Понимаю многое, но плохо говорю'), ('4', 'Понимаю немного, когда говорят очень медленно, но плохо говорю'), ('5', 'Не разговариваю совсем')], default='', max_length=1, verbose_name='Знание китайского языка')),
                ('driver_license', models.BooleanField(default=False, verbose_name='Водительские права')),
                ('driving_experience', models.CharField(blank=True, choices=[('1', 'до 1 года'), ('2', '1 год'), ('3', '2 года'), ('4', '3 года'), ('5', '4 и более лет')], default='', max_length=1, verbose_name='Стаж вождения')),
                ('cat_a', models.BooleanField(default=False, verbose_name='Категория A')),
                ('cat_b', models.BooleanField(default=False, verbose_name='Категория B')),
                ('cat_c', models.BooleanField(default=False, verbose_name='Категория C')),
                ('cat_d', models.BooleanField(default=False, verbose_name='Категория D')),
                ('cat_e', models.BooleanField(default=False, verbose_name='Категория E')),
                ('tractor', models.BooleanField(default=False, verbose_name='Трактор')),
                ('transmission', models.CharField(blank=True, choices=[('1', 'Механика'), ('2', 'Автомат'), ('3', 'Механика и автомат')], default='', max_length=1, verbose_name='Коробка передач')),
                ('bicycle_skill', models.CharField(blank=True, choices=[('ride_good', 'Да, отлично'), ('ride_bad', 'Да, но плохо'), ('cant_ride', 'Нет, не умею')], default='', max_length=10, verbose_name='Умение кататься на велосипеде')),
                ('shirt_size', models.CharField(blank=True, choices=[('xs', 'XS'), ('s', 'S'), ('m', 'M'), ('l', 'L'), ('xl', 'XL'), ('xxl', 'XXL')], default='', max_length=3, verbose_name='Размер рубашки')),
                ('pants_size', models.IntegerField(blank=True, choices=[(24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36)], null=True, verbose_name='Размер брюк')),
                ('shoe_size', models.IntegerField(blank=True, choices=[(34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46)], null=True, verbose_name='Размер обуви')),
                ('reading', models.BooleanField(default=False, verbose_name='Чтение')),
                ('singing', models.BooleanField(default=False, verbose_name='Пение')),
                ('travelling', models.BooleanField(default=False, verbose_name='Путешествие')),
                ('yoga', models.BooleanField(default=False, verbose_name='Йога')),
                ('dancing', models.BooleanField(default=False, verbose_name='Танцы')),
                ('sport', models.BooleanField(default=False, verbose_name='Спорт')),
                ('drawing', models.BooleanField(default=False, verbose_name='Рисование')),
                ('computer_games', models.BooleanField(default=False, verbose_name='Компьютерные игры')),
                ('guitar', models.BooleanField(default=False, verbose_name='Игра на гитаре')),
                ('films', models.BooleanField(default=False, verbose_name='Фильмы')),
                ('music', models.BooleanField(default=False, verbose_name='Музыка')),
                ('knitting', models.BooleanField(default=False, verbose_name='Вязание')),
                ('cooking', models.BooleanField(default=False, verbose_name='Готовка')),
                ('fishing', models.BooleanField(default=False, verbose_name='Рыбалка')),
                ('photographing', models.BooleanField(default=False, verbose_name='Фотография')),
                ('study_certificate', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Справка с места учебы')),
                ('study_certificate_confirm', models.BooleanField(default=False, verbose_name='Справка с места учебы - Подтверждено')),
                ('study_certificate_paper_confirm', models.BooleanField(default=False, verbose_name='Справка с места учебы - бумажная версия')),
                ('study_certificate_embassy', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Справка с места учебы для посольства')),
                ('study_certificate_embassy_confirm', models.BooleanField(default=False, verbose_name='Справка с места учебы для посольства - Подтверждено')),
                ('study_certificate_paper_embassy_confirm', models.BooleanField(default=False, verbose_name='Справка с места учебы для посольства - бумажная версия')),
                ('study_certificate_translate_embassy', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Перевод справки с места учебы для посольства')),
                ('study_certificate_translate_embassy_confirm', models.BooleanField(default=False, verbose_name='Перевод справки с места учебы для посольства - Подтверждено')),
                ('study_certificate_translate_paper_embassy_confirm', models.BooleanField(default=False, verbose_name='Перевод справки с места учебы для посольства - бумажная версия')),
                ('photo_for_schengen', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Фото на шенген 3.5x4.5')),
                ('photo_for_schengen_confirm', models.BooleanField(default=False, verbose_name='Фото на шенген - Подтверждено')),
                ('photo_for_schengen_paper_confirm', models.BooleanField(default=False, verbose_name='Фото на шенген - бумажная версия')),
                ('zagranpassport_copy', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Загранпаспорт')),
                ('zagranpassport_copy_confirm', models.BooleanField(default=False, verbose_name='Загранпасспорт - Подтверждено')),
                ('zagranpassport_copy_paper_confirm', models.BooleanField(default=False, verbose_name='Загранпасспорт - бумажная версия')),
                ('passport_copy', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Копия ID')),
                ('passport_copy_confirm', models.BooleanField(default=False, verbose_name='Пасспорт - Подтверждено')),
                ('passport_copy_paper_confirm', models.BooleanField(default=False, verbose_name='Пасспорт - бумажная версия')),
                ('fluorography_express', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Флюрография регистрация')),
                ('fluorography_express_confirm', models.BooleanField(default=False, verbose_name='Флюрография регистрация - Подтверждено')),
                ('fluorography_express_paper_confirm', models.BooleanField(default=False, verbose_name='Флюорография регистрация - бумажная версия')),
                ('fluorography', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Флюрография посольство')),
                ('fluorography_confirm', models.BooleanField(default=False, verbose_name='Флюрография посольство - Подтверждено')),
                ('fluorography_paper_confirm', models.BooleanField(default=False, verbose_name='Флюорография посольство - бумажная версия')),
                ('immatrikulation', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Immatrikulation с печатью университета')),
                ('immatrikulation_download_date', models.DateField(blank=True, null=True, verbose_name='Дата загрузки имматрикуляциона')),
                ('immatrikulation_confirm', models.BooleanField(default=False, verbose_name='Immatrikulation с печатью университета - Подтверждено')),
                ('immatrikulation_paper_confirm', models.BooleanField(default=False, verbose_name='Immatrikulation - бумажная версия')),
                ('transcript', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Транскрипт оригинал')),
                ('transcript_confirm', models.BooleanField(default=False, verbose_name='Транскрипт оригинал - Подтверждено')),
                ('transcript_paper_confirm', models.BooleanField(default=False, verbose_name='Транскрипт оригинал - бумажная версия')),
                ('transcript_translate', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Перевод транскрипта')),
                ('transcript_translate_confirm', models.BooleanField(default=False, verbose_name='Перевод транскрипта - Подтверждено')),
                ('transcript_translate_paper_confirm', models.BooleanField(default=False, verbose_name='Перевод транскрипта - бумажная версия')),
                ('bank_statement', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Выписка с банка')),
                ('bank_statement_confirm', models.BooleanField(default=False, verbose_name='Выписка с банка - Подтверждено')),
                ('bank_statement_paper_confirm', models.BooleanField(default=False, verbose_name='Выписка с банка - \xa0бумажная версия')),
                ('conduct_certificate', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Справка о несудимости')),
                ('conduct_certificate_confirm', models.BooleanField(default=False, verbose_name='Справка о несудимости - Подтверждено')),
                ('conduct_certificate_paper_confirm', models.BooleanField(default=False, verbose_name='Справка о несудимости - бумажная версия')),
                ('mentaldispanser_certificate', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Справка с психдиспансера')),
                ('mentaldispanser_certificate_confirm', models.BooleanField(default=False, verbose_name='Справка с психдиспансера - Подтверждено')),
                ('mentaldispanser_certificate_paper_confirm', models.BooleanField(default=False, verbose_name='Справка с психдиспансера - бумажная версия')),
                ('drugdispanser_certificate', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Справка с наркодиспансера')),
                ('drugdispanser_certificate_confirm', models.BooleanField(default=False, verbose_name='Справка с наркодиспансера - Подтверждено')),
                ('drugdispanser_certificate_paper_confirm', models.BooleanField(default=False, verbose_name='Справка с наркодиспансера - бумажная версия')),
                ('parental_permission', models.FileField(blank=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Разрешение от родителей')),
                ('parental_permission_confirm', models.BooleanField(default=False, verbose_name='Разрешение от родителей - Подтверждено')),
                ('parental_permission_paper_confirm', models.BooleanField(default=False, verbose_name='Разрешение от родителей - бумажная версия')),
                ('bank_details', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Реквизиты банка')),
                ('bank_details_confirm', models.BooleanField(default=False, verbose_name='Реквизиты банка - Подтверждено')),
                ('bank_details_paper_confirm', models.BooleanField(default=False, verbose_name='Реквизиты банка - бумажная версия')),
                ('jipl_paper_confirm', models.BooleanField(default=False, verbose_name='ЖИПЛ - бумажная версия')),
                ('resume_paper_confirm', models.BooleanField(default=False, verbose_name='Резюме - бумажная версия')),
                ('work_contract_paper_confirm', models.BooleanField(default=False, verbose_name='Договор труда - бумажная версия')),
                ('traning_contract_paper_confirm', models.BooleanField(default=False, verbose_name='Договор тренинга - бумажная версия')),
                ('receipt_paper_confirm', models.BooleanField(default=False, verbose_name='Расписка - бумажная версия')),
                ('embassy_anketa', models.BooleanField(default=False, verbose_name='Анкета для посольства')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Дата с договора')),
                ('termin', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время собеседования в посольстве (termin)')),
                ('embassy_visametric', models.CharField(blank=True, choices=[('embassy', 'Посольство'), ('visametric', 'Визаметрик')], default='', max_length=100, verbose_name='Посольство / Визаметрик')),
                ('training_sum', models.IntegerField(default=0, verbose_name='Сумма за тренинги')),
                ('training_sum_stable', models.IntegerField(default=0, verbose_name='Сумма за тренинг 6000')),
                ('employment_sum', models.IntegerField(default=0, verbose_name='Сумма за трудоустройство')),
                ('is_training_sum', models.BooleanField(default=False)),
                ('is_training_sum_stable', models.BooleanField(default=False)),
                ('is_employment_sum', models.BooleanField(default=False)),
                ('full_sum', models.IntegerField(default=0, verbose_name='Полная сумма к оплате')),
                ('employer_confirm_date', models.DateField(blank=True, null=True, verbose_name='Дата подтверждения работодателем')),
                ('zav_send_date', models.DateField(blank=True, null=True, verbose_name='Дата отправки в ZAV')),
                ('work_permit_date', models.DateField(blank=True, null=True, verbose_name='Дата получения рабочего разрешения')),
                ('work_invitation_date', models.DateField(blank=True, null=True, verbose_name='Дата получения приглашения на работу')),
                ('documents_send_date', models.DateField(blank=True, null=True, verbose_name='Дата отправления документов')),
                ('german_insurance', models.BooleanField(default=False, verbose_name='Немецкая страховка')),
                ('local_insurance', models.BooleanField(default=False, verbose_name='Местная страховка')),
                ('accomodation', models.BooleanField(default=False, verbose_name='Статус подтверждения жилья')),
                ('accomodation_type', models.CharField(blank=True, choices=[('student', 'Студент'), ('employer', 'Работодатель')], default='', max_length=50, verbose_name='Тип жилья')),
                ('german_work_contract', models.BooleanField(default=False, verbose_name='Рабочий договор')),
                ('documents_collected_by', models.CharField(blank=True, default='', max_length=500, verbose_name='Сбор документов осуществлен админом')),
                ('consultant', models.CharField(blank=True, default='', max_length=500, verbose_name='Консультант')),
                ('consult_date', models.DateField(blank=True, null=True, verbose_name='Дата консультации')),
                ('flight_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время вылета в Германию')),
                ('arrival_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время прилета в Германию')),
                ('destination_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время прибытия в пункт назначения')),
                ('arrival_city', models.CharField(blank=True, default='', max_length=500, verbose_name='Город - пункт назначения')),
                ('arrival_airport', models.CharField(blank=True, default='', max_length=500, verbose_name='Аэропорт - пункт назначения')),
                ('arrival_place', models.TextField(blank=True, default='', verbose_name='Пункт назначения')),
                ('marshrut', models.CharField(blank=True, choices=[('not_exist', 'Нет маршрута'), ('doubtful', 'Сомнительно'), ('created', 'Маршрут был составлен'), ('received', 'Маршрут был получен')], default='not_exist', max_length=30, verbose_name='Маршрут')),
                ('immatrikulation_received', models.BooleanField(default=False, verbose_name='Immatrikulation выдан студенту на руки')),
                ('domkom_document', models.CharField(blank=True, choices=[('not_exist', 'Нет'), ('brought', 'Принес'), ('sent', 'Отправили в Германию'), ('not_given', 'Не дали')], default='not_exist', max_length=30, verbose_name='Справка от домкома')),
                ('bilet_document', models.CharField(blank=True, choices=[('not_exist', 'Нет'), ('brought', 'Принес'), ('sent', 'Отправили в Германию'), ('not_given', 'Не смог получить (сомнительно)')], default='not_exist', max_length=30, verbose_name='Билет')),
                ('akt_trainings', models.BooleanField(default=False, verbose_name='Акт по тренингам')),
                ('akt_iwex', models.BooleanField(default=False, verbose_name='Акт IWEX')),
                ('receipt_flight', models.BooleanField(default=False, verbose_name='Расписка по инструктажу')),
                ('consultant_before_flight', models.CharField(blank=True, default='', max_length=500, verbose_name='Консультант (инструктаж перед вылетом)')),
                ('work_from', models.DateField(blank=True, null=True, verbose_name='Дата начала работы')),
                ('work_to', models.DateField(blank=True, null=True, verbose_name='Дата окончания работы')),
                ('company_name', models.CharField(blank=True, default='', max_length=500, verbose_name='Название компании')),
                ('position', models.CharField(blank=True, default='', max_length=500, verbose_name='Вакансия')),
                ('agreement1_download_date', models.DateField(blank=True, verbose_name='Дата загрузки Договора на тренинг')),
                ('agreement2_download_date', models.DateField(blank=True, verbose_name='Дата загрузки Договора на трудоустройство')),
                ('agreement3_download_date', models.DateField(blank=True, verbose_name='Дата загрузки Договора на тренинг 6000')),
                ('agreement1', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Договор на тренинг')),
                ('agreement2', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Договор на трудоустройство')),
                ('agreement3', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Договор на тренинг 6000')),
                ('agreement1_date', models.DateField(blank=True, null=True)),
                ('agreement2_date', models.DateField(blank=True, null=True)),
                ('agreement3_date', models.DateField(blank=True, null=True)),
                ('agreement1_number', models.CharField(blank=True, max_length=32, null=True)),
                ('agreement2_number', models.CharField(blank=True, max_length=32, null=True)),
                ('agreement3_number', models.CharField(blank=True, max_length=32, null=True)),
                ('act1', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Акт приема-передачи №1 (тренинг)')),
                ('act2', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Акт приема-передачи №2(трудоустройство)')),
                ('act3', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Акт приема-передачи №3 (тренинг6000)')),
                ('act1_download_date', models.DateField(blank=True, null=True, verbose_name='Дата загрузки акта тренинги')),
                ('act2_download_date', models.DateField(blank=True, null=True, verbose_name='Дата загрузки акта №2')),
                ('act3_download_date', models.DateField(blank=True, null=True, verbose_name='Дата загрузки акта №3')),
                ('closure1', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Расторжение №1(тренинг)')),
                ('closure2', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Расторжение №2(трудоустройство)')),
                ('closure3', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Расторжение №3(тренинг 6000)')),
                ('consult_list', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Консультационный лист')),
                ('invitation', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Приглашение')),
                ('labor_agreement', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Рабочий договор')),
                ('liveplace_approve', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Подтверждение жилья')),
                ('insurance', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Страховка')),
                ('in_review', models.BooleanField(blank=True, null=True, verbose_name='На расссмотрении')),
                ('visa_file', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Скан визы')),
                ('visa_reject', models.BooleanField(blank=True, null=True, verbose_name='Отказано в визе')),
                ('loan', models.IntegerField(blank=True, null=True, verbose_name='Долг')),
                ('living_condition', models.TextField(blank=True, null=True, verbose_name='Условия проживания')),
                ('new_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Новая почта')),
                ('telephone', models.CharField(blank=True, max_length=128, null=True, verbose_name='Номер телефона')),
                ('pnr_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='PNR-код')),
                ('termin_scan', models.FileField(blank=True, null=True, upload_to=applications.accounts.utils.user_directory_path, verbose_name='Скан термина')),
                ('has_termin', models.BooleanField(default=False, verbose_name='Наличие термина')),
                ('characteristics', models.TextField(blank=True, default='', verbose_name='Характеристика')),
                ('nvks', models.BooleanField(default=False, verbose_name='НВКС')),
                ('in_interview_review', models.BooleanField(blank=True, null=True, verbose_name='На рассмотрении в Собеседовании')),
                ('is_refused', models.BooleanField(default=False, verbose_name='Отказался')),
            ],
            options={
                'ordering': ['last_name', 'first_name', '-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='ProfileHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128, verbose_name='Автор изменений')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменений')),
                ('changes', models.TextField(verbose_name='Текст изменения')),
            ],
            options={
                'verbose_name': 'История изменений Характеристики',
                'verbose_name_plural': 'Истории изменений Характеристики',
            },
        ),
    ]
