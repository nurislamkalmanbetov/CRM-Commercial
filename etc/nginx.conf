user  root;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 100M;

    # increase timeout values
    proxy_connect_timeout   1000;
    proxy_send_timeout      1000;
    proxy_read_timeout      1000;

    server {
        listen 80;
        server_name www.iwex.kg iwex.kg;
        rewrite ^ https://iwex.kg$request_uri? permanent;
    }

    server {
        listen 443;
        server_name iwex.kg ssl;

        ssl on;
        ssl_certificate /etc/nginx/ssl/iwex.kg.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/iwex.kg.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    
        client_max_body_size 100M;

        location / {
            client_max_body_size 100M;
            uwsgi_pass unix:///common_files/web-wsgi.sock;
            include uwsgi_params;
            uwsgi_read_timeout 1000;
            error_page 404  /404.json;
            error_page 500 502 503 504  /500.json;
        }

        location /media  {
            alias /media;
        }

        location /static {
            alias /static;
        }

        location /500.json {
            return 500 '{"error": {"status_code": 500,"status": "Internal Server Error"}}';
        }

        location /404.json {
            return 404 '{"error": {"status_code": 404,"status": "Not Found"}}';
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
