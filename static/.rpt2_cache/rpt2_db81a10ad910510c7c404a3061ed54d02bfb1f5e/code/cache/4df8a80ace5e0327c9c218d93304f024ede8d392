{"code":"var Form = /** @class */ (function () {\r\n    function Form(form, validations) {\r\n        this.form = form;\r\n        this.validations = validations;\r\n        this.errors = {};\r\n        this.valids = {};\r\n        this.init();\r\n    }\r\n    Form.prototype.init = function () {\r\n        var _this = this;\r\n        Object.keys(this.validations).forEach(function (fieldKey) {\r\n            if (!_this.form[fieldKey])\r\n                return new Error(\"Form \" + _this.form.id + \" doesn't have input w name \" + fieldKey);\r\n            _this.form[fieldKey].addEventListener('change', _this.validate.bind(_this, fieldKey));\r\n            _this.errors[fieldKey] = false; // need to inspect this\r\n            _this.valids[fieldKey] = false; // need to inspect this\r\n        });\r\n        this.submitDisable(true);\r\n    };\r\n    Form.prototype.validate = function (name) {\r\n        // @ts-ignore: Unreachable code error\r\n        if (!this.validations[name].required) {\r\n            this.setValid(name);\r\n            return;\r\n        }\r\n        // @ts-ignore: Unreachable code error\r\n        if (this.validations[name].type === 'file') {\r\n            this.setValid(name);\r\n            // @ts-ignore: Unreachable code error\r\n        }\r\n        else if (this.validations[name].type === 'select') {\r\n            if (this.form[name].value !== '') {\r\n                this.setValid(name);\r\n            }\r\n            else {\r\n                // @ts-ignore: Unreachable code error\r\n                this.setError(name, this.validations[name].msg);\r\n            }\r\n        }\r\n        else {\r\n            // @ts-ignore: Unreachable code error\r\n            if (!this.validations[name].reg.test(this.form[name].value)) {\r\n                // @ts-ignore: Unreachable code error\r\n                this.setError(name, this.validations[name].msg);\r\n            }\r\n            else {\r\n                this.setValid(name);\r\n            }\r\n        }\r\n    };\r\n    Form.prototype.setError = function (name, msg) {\r\n        // @ts-ignore: Unreachable code error\r\n        this.errors[name] = msg;\r\n        this.render();\r\n    };\r\n    Form.prototype.setValid = function (name) {\r\n        // @ts-ignore: Unreachable code error\r\n        this.errors[name] = false;\r\n        this.valids[name] = true;\r\n        this.render();\r\n    };\r\n    Form.prototype.render = function (errors) {\r\n        var _this = this;\r\n        if (errors === void 0) { errors = this.errors; }\r\n        this.clearAll();\r\n        Object.keys(errors).forEach(function (field) {\r\n            // @ts-ignore: Unreachable code error\r\n            var fieldType = _this.validations[field].type;\r\n            if (fieldType === 'select') {\r\n                var select = _this.form.querySelector(\".select-wrapper__select[name=\\\"\" + field + \"\\\"]\");\r\n                var errorOutput = select.closest('.select-wrapper').querySelector('.select-wrapper__error');\r\n                // @ts-ignore: Unreachable code error\r\n                if (errors[field]) {\r\n                    _this.submitDisable(true);\r\n                    // @ts-ignore: Unreachable code error\r\n                    errorOutput.textContent = errors[field];\r\n                    errorOutput.classList.add('select-wrapper__error_show');\r\n                    select.classList.add('select-wrapper__select_error');\r\n                    select.classList.remove('select-wrapper__select_validated');\r\n                }\r\n                else if (_this.valids[field]) {\r\n                    select.classList.remove('select-wrapper__select_error');\r\n                    select.classList.add('select-wrapper__select_validated');\r\n                    errorOutput.classList.remove('select-wrapper__error_show');\r\n                }\r\n            }\r\n            else if (fieldType === 'file') {\r\n                var wrapper = _this.form.querySelector(\".file-input-wrapper__input[name=\\\"\" + field + \"\\\"]\").closest('.file-input-wrapper');\r\n                var label = wrapper.querySelector('.file-input-wrapper__label');\r\n                // @ts-ignore: Unreachable code error      \r\n                if (errors[field]) {\r\n                    _this.submitDisable(true);\r\n                    var errorOutput = wrapper.querySelector('.file-input-wrapper__error');\r\n                    // @ts-ignore: Unreachable code error      \r\n                    errorOutput.textContent = errors[field];\r\n                    errorOutput.classList.add('file-input-wrapper__error_show');\r\n                    label.classList.add('file-input-wrapper__label_error');\r\n                    label.classList.remove('file-input-wrapper__label_validated');\r\n                }\r\n                else if (_this.valids[field]) {\r\n                    label.classList.remove('file-input-wrapper__label_error');\r\n                    label.classList.add('file-input-wrapper__label_validated');\r\n                }\r\n            }\r\n            else if (fieldType === 'checkbox') {\r\n            }\r\n            else {\r\n                var input = _this.form.querySelector(\".input-wrapper__input[name=\\\"\" + field + \"\\\"]\");\r\n                // @ts-ignore: Unreachable code error      \r\n                if (errors[field]) {\r\n                    _this.submitDisable(true);\r\n                    var errorOutput = input.closest('.input-wrapper').querySelector('.input-wrapper__error');\r\n                    // @ts-ignore: Unreachable code error\r\n                    errorOutput.textContent = errors[field];\r\n                    errorOutput.classList.add('input-wrapper__error_show');\r\n                    input.classList.add('input-wrapper__input_error');\r\n                    input.classList.remove('input-wrapper__input_validated');\r\n                }\r\n                else if (_this.valids[field]) {\r\n                    input.classList.add('input-wrapper__input_validated');\r\n                    input.classList.remove('input-wrapper__input_error');\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Form.prototype.clearAll = function () {\r\n        var errors = this.form.querySelectorAll('.input-wrapper__error');\r\n        errors.forEach(function (err) {\r\n            err.classList.remove('input-wrapper__error_show');\r\n            var defaultError = err.getAttribute('data-default-error');\r\n            err.textContent = defaultError || 'Error';\r\n        });\r\n        var inputs = this.form.querySelectorAll('.input-wrapper__input');\r\n        inputs.forEach(function (inpt) {\r\n            inpt.classList.remove('input-wrapper__input_validated');\r\n        });\r\n        this.submitDisable(false);\r\n    };\r\n    Form.prototype.submitDisable = function (value) {\r\n        var submit = this.form.querySelector('button[type=\"submit\"]');\r\n        submit.disabled = value;\r\n    };\r\n    return Form;\r\n}());\r\nexport default Form;\r\n","references":[]}
